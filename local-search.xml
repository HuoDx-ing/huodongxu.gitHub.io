<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Module Federation</title>
    <link href="/2021/02/24/hello-world/"/>
    <url>/2021/02/24/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是Module-Federation？"><a href="#什么是Module-Federation？" class="headerlink" title="什么是Module Federation？"></a>什么是Module Federation？</h2><p>Module Federation （模块联合）其实就是暴露给其他应用使用的模块 主要是来解决代码共享问题。<br>例如现在有两个项目A和B   项目A下面有一个图片组件，项目B有一个列表组件</p><h3 id="A组件"><a href="#A组件" class="headerlink" title="A组件"></a>A组件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">import React, &#123; Component &#125; from <span class="hljs-string">&#x27;react&#x27;</span>;<br>class Slides extends Component &#123;<br>  constructor(props) &#123;<br>    super(props);<br>    this.state = &#123;  &#125;;<br>  &#125;<br>  <span class="hljs-function"><span class="hljs-title">render</span></span>() &#123;<br>    <span class="hljs-built_in">return</span> (<br>      &lt;div style=&#123;&#123;textAlign:<span class="hljs-string">&quot;center&quot;</span>&#125;&#125;&gt;&lt;img src=<span class="hljs-string">&#x27;https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=3360389619,4039848893&amp;fm=26&amp;gp=0.jpg&#x27;</span>/&gt;&lt;/div&gt;<br>    );  <br>  &#125;<br>&#125;<br><br><span class="hljs-built_in">export</span> default Slides;<br></code></pre></td></tr></table></figure><h3 id="B组件"><a href="#B组件" class="headerlink" title="B组件"></a>B组件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">import React, &#123; useState, useEffect &#125; from <span class="hljs-string">&#x27;react&#x27;</span>;<br><br>const NewsList = () =&gt; &#123;<br>  const [data, setData] = useState([<br>    &#123;<br>      title:<span class="hljs-string">&quot;11111111111&quot;</span>&#125;,<br>    &#123;<br>      title:<span class="hljs-string">&quot;22222222222&quot;</span><br>    &#125;,&#123;<br>      title:<span class="hljs-string">&quot;33333333333&quot;</span><br>    &#125;,&#123;<br>      title:<span class="hljs-string">&quot;44444444444&quot;</span><br>    &#125;,&#123;<br>      title:<span class="hljs-string">&quot;55555555555&quot;</span><br>    &#125;<br>  ]);<br> <br><br>  <span class="hljs-built_in">return</span> (<br>    &lt;ul&gt;<br>      &#123;data.map(item =&gt; (<br>        &lt;li key=&#123;item.title&#125;&gt;<br>          &lt;span href=&#123;item.title&#125;&gt;&#123;item.title&#125;&lt;/span&gt;<br>        &lt;/li&gt;<br>      ))&#125;<br>    &lt;/ul&gt;<br>  );<br>&#125;<br><br><span class="hljs-built_in">export</span> default NewsList;<br></code></pre></td></tr></table></figure><p>现在要将B的列表移入到A中，而且保证后续的迭代过程中，两边的新列表样式保持一致</p><ol><li>将项目 B 的代码完整复制一份到项目 A；</li><li>将列表组件独立，发布到内部的 npm，通过 npm 加载组件；<br>但是如果两个项目都使用webpack5   Module Federation 可以实现代码共享 解决上面的需求</li></ol><p>项目A的App.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">import React from <span class="hljs-string">&quot;react&quot;</span>;<br>import Slides from <span class="hljs-string">&#x27;./Slides&#x27;</span>;<br>const App = () =&gt; (<br>  &lt;div&gt;<br>    &lt;h2 style=&#123;&#123; textAlign: <span class="hljs-string">&#x27;center&#x27;</span> &#125;&#125;&gt; A组件&lt;/h2&gt;<br>    &lt;Slides /&gt;<br>  &lt;/div&gt;<br>);<br><br><span class="hljs-built_in">export</span> default App;<br></code></pre></td></tr></table></figure><p>项目B的App.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"> import React from <span class="hljs-string">&quot;react&quot;</span>;<br>import NewsList from <span class="hljs-string">&#x27;./NewsList&#x27;</span>;<br>const RemoteSlides = React.lazy(() =&gt; import(<span class="hljs-string">&quot;app1/Slides&quot;</span>));<br><br>const App = () =&gt; (<br>  &lt;div&gt;<br>    &lt;h2 style=&#123;&#123; textAlign: <span class="hljs-string">&#x27;center&#x27;</span> &#125;&#125;&gt;App 2, Local NewsList&lt;/h2&gt;<br>    &lt;NewsList /&gt;<br>  &lt;/div&gt;<br>);<br><span class="hljs-built_in">export</span> default App;<br></code></pre></td></tr></table></figure><p>接下来我们到重点，怎么配置两个项目的Webpack.config.js<br>整体是通过 ModuleFederationPlugin这个插件串联起来的 我们需要配置的属性：<br>• name，必须，唯一 ID，作为输出的模块名，使用的时通过 ${name}/${expose} 的方式使用；<br>• remotes，可选，表示作为 Host 时，去消费哪些 Remote；<br>• exposes，可选，表示作为 Remote 时，export 哪些属性被消费；<br>• shared，可选，优先用 Host 的依赖，如果 Host 没有，再用自己的；</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>React17</title>
    <link href="/2020/03/23/about/index/"/>
    <url>/2020/03/23/about/index/</url>
    
    <content type="html"><![CDATA[<h2 id="更改事件委托"><a href="#更改事件委托" class="headerlink" title="更改事件委托"></a>更改事件委托</h2>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
